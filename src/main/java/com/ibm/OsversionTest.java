package com.ibm;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class OsversionTest {

    public static void main(String[] args) {

        List<InstallAgentPPPCInfo> pppcPayloadList = new ArrayList<>();
        InstallAgentPPPCInfo info1 = new InstallAgentPPPCInfo("10.15", "10.15 OS VERSION");
        InstallAgentPPPCInfo info2 = new InstallAgentPPPCInfo("11.0", "11.0 OS VERSION");
        InstallAgentPPPCInfo info3 = new InstallAgentPPPCInfo("12.0", "");
        InstallAgentPPPCInfo info4 = new InstallAgentPPPCInfo("11.1", "11.1 OS VERSION");
        InstallAgentPPPCInfo info5 = new InstallAgentPPPCInfo("10.1", "10.1 OS VERSION");
        pppcPayloadList.add(info1);
        pppcPayloadList.add(info2);
        pppcPayloadList.add(info3);
        pppcPayloadList.add(info4);
        pppcPayloadList.add(info5);

        Map<String, String> payloadData = new HashMap<>();

        for (InstallAgentPPPCInfo info : pppcPayloadList) {
            payloadData.put(info.getOsVersion(), info.getPayload());
        }


        System.out.println(getLongArrayList(payloadData.keySet()));
    }

    private static List<Float> getLongArrayList(Set<String> keySet) {
        List<Float> longArrayList = new ArrayList<>();
        try {
            for (String macversion : keySet) {
                Float macVersionLongValue;
                String versionFields[] = macversion.split("\\.");
                if (versionFields.length >= 2) {
                    String val = versionFields[0] + "." + versionFields[1];
                    System.out.println("val: " + val);
                    macVersionLongValue = Float.valueOf(val);
                } else {
                    macVersionLongValue = Float.valueOf(versionFields[0]);
                }
                longArrayList.add(macVersionLongValue);
            }
        } catch (NumberFormatException e) {
            e.printStackTrace();
        }
        return longArrayList;
    }
}
